With Powershell

Create project Django : 
> python -m django startproject <Project>

Launch server :
> python manage.py runserver

Create applications in project folder :
> python manage.py startapp <App>

Install environment python : 
> python3 -m venv <env>

Launch environment : 
> ./env/scripts/activate.ps1

Launch python/django shell :
> python manage.py shell

Install Django Rest Framework :
> pip install djangorestframework

Authorize fetch between front/back = install django cors headers (don't forget to add 'corsheaders' in INSTALLED_APPS and  'corsheaders.middleware.CorsMiddleware' in MIDDLEWARE always top of 'django.middleware.common...') :
> pip install django-cors-headers

Install Vue.js :
> npm install -g @vue/cli

Launch Vue server : 
> yarn serve

Install Django & Mysql : 
> pip install django
> pip install mysqlclient
Postgresql :
> pip install psycopg2
DATABASES = { # in settings.py
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'testdb',
        'USER': 'postgres',
        'PASSWORD': '123',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

Per new models (create new tables sql) :
> python manage.py makemigrations
> python manage.py migrate

For create Super User (Administration):
python manage.py createsuperuser --email <email@email.com> --username <admin>

Access to the Admin Panel :
http://localhost:8000/admin/

See admin.py.

Use images :
> pip install pillow # see contact models

Initial tips :

> Create urls.py per applications.
> Create forms.py per applications.
> Create templates folder per applications.
> Create media folder global for store media (photos, videos ...).
> Include new app in settings.py.
> Change MEDIA ROOT in settings.py for redirect in media folder.

If Unresolved django (...) : CTRL + SCHIFT + P (VSCODE) + reload window.

MVT :
Models : data
Template : front
View : front + data

ForeignKey : Key shared between several tables.

Example utilisations of shell with django :
>>> from blog.models import Article # Article it's the models.
>>> article = Article(titre="Bonjour", auteur="Maxime")
>>> article.contenu = "Content"
>>> article.save() (save the article in database)
>>> Article.objects.all()

Example with the link to another models :
>>> cat = Categorie(name="divers") # see first models
>>> cat.save()

>>> art = Article()
>>> art.categorie = cat
>>> art.save()

>>> art.categorie.nom
divers

Article.objects.filter(categorie__nom__contains="divers")
 # Point important : il est possible d’accéder aux attributs du modèle lié par une clé étrangère depuis un filter, exclude, order_by… Nous pourrions ici par exemple filtrer tous les articles dont le titre de la catégorie possède un certain mot :

 OneToOneField (example : motor = models.OneToOneField(Moteur, on_delete=models.CASCADE)) : same link to another models.

 ManyToManyField & ForeignKey : https://docs.djangoproject.com/fr/3.1/topics/db/examples/

 slug = short label for better urls



